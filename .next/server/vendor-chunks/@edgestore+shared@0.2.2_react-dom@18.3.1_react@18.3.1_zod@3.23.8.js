"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@edgestore+shared@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8";
exports.ids = ["vendor-chunks/@edgestore+shared@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@edgestore+shared@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/shared/dist/index.mjs":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@edgestore+shared@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/shared/dist/index.mjs ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EDGE_STORE_ERROR_CODES: () => (/* binding */ EDGE_STORE_ERROR_CODES),\n/* harmony export */   EdgeStoreApiClientError: () => (/* binding */ EdgeStoreApiClientError),\n/* harmony export */   EdgeStoreError: () => (/* binding */ EdgeStoreError),\n/* harmony export */   initEdgeStore: () => (/* binding */ initEdgeStore)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(ssr)/./node_modules/.pnpm/zod@3.23.8/node_modules/zod/lib/index.mjs\");\n\n\nfunction _define_property$1(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n/* eslint-disable @typescript-eslint/no-non-null-assertion */ const EDGE_STORE_ERROR_CODES = {\n    BAD_REQUEST: 400,\n    FILE_TOO_LARGE: 400,\n    MIME_TYPE_NOT_ALLOWED: 400,\n    UNAUTHORIZED: 401,\n    UPLOAD_NOT_ALLOWED: 403,\n    DELETE_NOT_ALLOWED: 403,\n    CREATE_CONTEXT_ERROR: 500,\n    SERVER_ERROR: 500\n};\nclass EdgeStoreError extends Error {\n    formattedMessage() {\n        return `${this.message}${this.details ? `\\n    Details: ${JSON.stringify(this.details)}` : ''}${this.cause ? `\\n    Caused by: ${this.cause.message}` : ''}`;\n    }\n    formattedJson() {\n        return {\n            message: this.code === 'SERVER_ERROR' ? 'Internal server error' : this.message,\n            code: this.code,\n            details: this.details\n        };\n    }\n    constructor(opts){\n        super(opts.message);\n        _define_property$1(this, \"cause\", void 0);\n        _define_property$1(this, \"code\", void 0);\n        _define_property$1(this, \"level\", void 0);\n        _define_property$1(this, \"details\", void 0);\n        this.name = 'EdgeStoreError';\n        this.code = opts.code;\n        this.cause = opts.cause;\n        this.level = EDGE_STORE_ERROR_CODES[opts.code] >= 500 ? 'error' : 'warn';\n        this.details = 'details' in opts ? opts.details : undefined;\n    }\n}\n\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nclass EdgeStoreApiClientError extends Error {\n    constructor(opts){\n        super(opts.response.message);\n        _define_property(this, \"data\", void 0);\n        this.name = 'EdgeStoreApiClientError';\n        this.data = opts.response;\n    }\n}\n\n/**\n * Creates a Proxy that prints the path to the property when called.\n *\n * Example:\n *\n * ```ts\n * const pathParamProxy = createPathParamProxy();\n * console.log(pathParamProxy.ctx.user.id());\n * // Logs: \"ctx.user.id\"\n * console.log(pathParamProxy.input.type());\n * // Logs: \"input.type\"\n * ```\n */ function createPathParamProxy() {\n    const getPath = (target, _prop)=>{\n        const proxyFunction = ()=>target;\n        return new Proxy(proxyFunction, {\n            get: (_target, propChild)=>{\n                return getPath(`${target}.${String(propChild)}`);\n            }\n        });\n    };\n    return new Proxy(()=>'', {\n        get: (_target, prop)=>{\n            return getPath(String(prop));\n        }\n    });\n}\n\nconst createNewBuilder = (initDef, newDef)=>{\n    const mergedDef = {\n        ...initDef,\n        ...newDef\n    };\n    return createBuilder({\n        type: mergedDef.type\n    }, mergedDef);\n};\nfunction createBuilder(opts, initDef) {\n    const _def = {\n        type: opts.type,\n        input: zod__WEBPACK_IMPORTED_MODULE_0__.z.never(),\n        path: [],\n        metadata: ()=>({}),\n        ...initDef\n    };\n    return {\n        $config: {\n            ctx: undefined\n        },\n        // @ts-expect-error - I think it would be too much work to make this type correct.\n        _def,\n        input (input) {\n            return createNewBuilder(_def, {\n                input\n            });\n        },\n        path (pathResolver) {\n            // TODO: Should throw a runtime error in the following cases:\n            // 1. in case of multiple keys in one object\n            // 2. in case of duplicate keys\n            const pathParamProxy = createPathParamProxy();\n            const params = pathResolver(pathParamProxy);\n            return createNewBuilder(_def, {\n                path: params\n            });\n        },\n        metadata (metadata) {\n            return createNewBuilder(_def, {\n                metadata\n            });\n        },\n        accessControl (accessControl) {\n            return createNewBuilder(_def, {\n                accessControl: accessControl\n            });\n        },\n        beforeUpload (beforeUpload) {\n            return createNewBuilder(_def, {\n                beforeUpload\n            });\n        },\n        beforeDelete (beforeDelete) {\n            return createNewBuilder(_def, {\n                beforeDelete\n            });\n        }\n    };\n}\nclass EdgeStoreBuilder {\n    context() {\n        return new EdgeStoreBuilder();\n    }\n    create() {\n        return createEdgeStoreInner()();\n    }\n}\nfunction createRouterFactory() {\n    return function createRouterInner(buckets) {\n        return {\n            $config: {\n                ctx: undefined\n            },\n            buckets\n        };\n    };\n}\nfunction initBucket(type, config) {\n    return createBuilder({\n        type\n    }, {\n        bucketConfig: config\n    });\n}\nfunction createEdgeStoreInner() {\n    return function initEdgeStoreInner() {\n        return {\n            /**\n       * Builder object for creating an image bucket\n       */ imageBucket (config) {\n                return initBucket('IMAGE', config);\n            },\n            /**\n       * Builder object for creating a file bucket\n       */ fileBucket (config) {\n                return initBucket('FILE', config);\n            },\n            /**\n       * Create a router\n       */ router: createRouterFactory()\n        };\n    };\n}\n/**\n * Initialize EdgeStore - be done exactly once per backend\n */ const initEdgeStore = new EdgeStoreBuilder(); // ↓↓↓ TYPE TESTS ↓↓↓\n // type Context = {\n //   userId: string;\n //   userRole: 'admin' | 'visitor';\n // };\n // const es = initEdgeStore.context<Context>().create();\n // const imagesBucket = es.imageBucket()\n //   .input(\n //     z.object({\n //       type: z.enum(['profile', 'post']),\n //       extension: z.string().optional(),\n //     }),\n //   )\n //   .path(({ ctx, input }) => [{ author: ctx.userId }, { type: input.type }])\n //   .metadata(({ ctx, input }) => ({\n //     extension: input.extension,\n //     role: ctx.userRole,\n //   }))\n //   .beforeUpload(() => {\n //     return true;\n //   });\n // const a = es.imageBucket()\n //   .input(z.object({ type: z.string(), someMeta: z.string().optional() }))\n //   .path(({ ctx, input }) => [{ author: ctx.userId }, { type: input.type }])\n //   .metadata(({ ctx, input }) => ({\n //     role: ctx.userRole,\n //     someMeta: input.someMeta,\n //   }))\n //   .accessControl({\n //     OR: [\n //       {\n //         userId: { path: 'author' }, // this will check if the userId is the same as the author in the path parameter\n //       },\n //       {\n //         userRole: 'admin', // this is the same as { userRole: { eq: \"admin\" } }\n //       },\n //     ],\n //   })\n //   .beforeUpload(({ ctx, input }) => {\n //     return true;\n //   })\n //   .beforeDelete(({ ctx, file }) => {\n //     return true;\n //   });\n // const b = es.imageBucket().path(({ ctx }) => [{ author: ctx.userId }]);\n // const router = es.router({\n //   original: imagesBucket,\n //   imageBucket: a,\n //   imageBucket2: b,\n // });\n // export { router };\n // type ListFilesResponse<TBucket extends AnyRouter['buckets'][string]> = {\n //   data: {\n //     // url: string;\n //     // size: number;\n //     // uploadedAt: Date;\n //     // metadata: InferMetadataObject<TBucket>;\n //     path: InferBucketPathKeys<TBucket> extends string ? {\n //       [key: string]: string;\n //     } :{\n //       [TKey in InferBucketPathKeys<TBucket>]: string;\n //     };\n //   }[];\n //   pagination: {\n //     currentPage: number;\n //     totalPages: number;\n //     totalCount: number;\n //   };\n // };\n // type TPathKeys = 'author' | 'type';\n // type TPathKeys2 = InferBucketPathKeys<AnyBuilder>;\n // type ObjectWithKeys<TKeys extends string> = {\n //   [TKey in TKeys]: string;\n // };\n // type Test1 = ObjectWithKeys<TPathKeys>;\n // type Test2 = ObjectWithKeys<TPathKeys2>;\n // type PathKeys = InferBucketPathKeys<typeof router.buckets.imageBucket>;\n // type MetadataKeys = InferMetadataObject<typeof router.buckets.imageBucket>;\n // type MyEdgeStoreRouter = typeof router;\n // type MyAccessControl = AccessControlSchema<Context, AnyDef>;\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGVkZ2VzdG9yZStzaGFyZWRAMC4yLjJfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfem9kQDMuMjMuOC9ub2RlX21vZHVsZXMvQGVkZ2VzdG9yZS9zaGFyZWQvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBd0I7O0FBRXhCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixhQUFhLEVBQUUsaUNBQWlDLDZCQUE2QixPQUFPLEVBQUUsaUNBQWlDLG1CQUFtQixPQUFPO0FBQ25LO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsT0FBTyxHQUFHLGtCQUFrQjtBQUM5RDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxrQ0FBQztBQUNoQjtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxlQUFlLFlBQVksUUFBUSxvQkFBb0IsSUFBSSxrQkFBa0I7QUFDN0UsbUJBQW1CLFlBQVk7QUFDL0I7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0Esd0JBQXdCLG1EQUFtRDtBQUMzRSxlQUFlLFlBQVksUUFBUSxvQkFBb0IsSUFBSSxrQkFBa0I7QUFDN0UsbUJBQW1CLFlBQVk7QUFDL0I7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsZ0JBQWdCO0FBQ3RDLFdBQVc7QUFDWDtBQUNBLHdEQUF3RCxZQUFZO0FBQ3BFLFdBQVc7QUFDWDtBQUNBLE9BQU87QUFDUCx1QkFBdUIsWUFBWTtBQUNuQztBQUNBLE9BQU87QUFDUCx1QkFBdUIsV0FBVztBQUNsQztBQUNBLE9BQU87QUFDUCx1Q0FBdUMsS0FBSyxRQUFRLG9CQUFvQjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTBGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmxpbmstZS1jb21tZXJjZS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AZWRnZXN0b3JlK3NoYXJlZEAwLjIuMl9yZWFjdC1kb21AMTguMy4xX3JlYWN0QDE4LjMuMV96b2RAMy4yMy44L25vZGVfbW9kdWxlcy9AZWRnZXN0b3JlL3NoYXJlZC9kaXN0L2luZGV4Lm1qcz9kODE2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHogfSBmcm9tICd6b2QnO1xuXG5mdW5jdGlvbiBfZGVmaW5lX3Byb3BlcnR5JDEob2JqLCBrZXksIHZhbHVlKSB7XG4gICAgaWYgKGtleSBpbiBvYmopIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIG9iajtcbn1cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb24gKi8gY29uc3QgRURHRV9TVE9SRV9FUlJPUl9DT0RFUyA9IHtcbiAgICBCQURfUkVRVUVTVDogNDAwLFxuICAgIEZJTEVfVE9PX0xBUkdFOiA0MDAsXG4gICAgTUlNRV9UWVBFX05PVF9BTExPV0VEOiA0MDAsXG4gICAgVU5BVVRIT1JJWkVEOiA0MDEsXG4gICAgVVBMT0FEX05PVF9BTExPV0VEOiA0MDMsXG4gICAgREVMRVRFX05PVF9BTExPV0VEOiA0MDMsXG4gICAgQ1JFQVRFX0NPTlRFWFRfRVJST1I6IDUwMCxcbiAgICBTRVJWRVJfRVJST1I6IDUwMFxufTtcbmNsYXNzIEVkZ2VTdG9yZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGZvcm1hdHRlZE1lc3NhZ2UoKSB7XG4gICAgICAgIHJldHVybiBgJHt0aGlzLm1lc3NhZ2V9JHt0aGlzLmRldGFpbHMgPyBgXFxuICAgIERldGFpbHM6ICR7SlNPTi5zdHJpbmdpZnkodGhpcy5kZXRhaWxzKX1gIDogJyd9JHt0aGlzLmNhdXNlID8gYFxcbiAgICBDYXVzZWQgYnk6ICR7dGhpcy5jYXVzZS5tZXNzYWdlfWAgOiAnJ31gO1xuICAgIH1cbiAgICBmb3JtYXR0ZWRKc29uKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbWVzc2FnZTogdGhpcy5jb2RlID09PSAnU0VSVkVSX0VSUk9SJyA/ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InIDogdGhpcy5tZXNzYWdlLFxuICAgICAgICAgICAgY29kZTogdGhpcy5jb2RlLFxuICAgICAgICAgICAgZGV0YWlsczogdGhpcy5kZXRhaWxzXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKG9wdHMpe1xuICAgICAgICBzdXBlcihvcHRzLm1lc3NhZ2UpO1xuICAgICAgICBfZGVmaW5lX3Byb3BlcnR5JDEodGhpcywgXCJjYXVzZVwiLCB2b2lkIDApO1xuICAgICAgICBfZGVmaW5lX3Byb3BlcnR5JDEodGhpcywgXCJjb2RlXCIsIHZvaWQgMCk7XG4gICAgICAgIF9kZWZpbmVfcHJvcGVydHkkMSh0aGlzLCBcImxldmVsXCIsIHZvaWQgMCk7XG4gICAgICAgIF9kZWZpbmVfcHJvcGVydHkkMSh0aGlzLCBcImRldGFpbHNcIiwgdm9pZCAwKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ0VkZ2VTdG9yZUVycm9yJztcbiAgICAgICAgdGhpcy5jb2RlID0gb3B0cy5jb2RlO1xuICAgICAgICB0aGlzLmNhdXNlID0gb3B0cy5jYXVzZTtcbiAgICAgICAgdGhpcy5sZXZlbCA9IEVER0VfU1RPUkVfRVJST1JfQ09ERVNbb3B0cy5jb2RlXSA+PSA1MDAgPyAnZXJyb3InIDogJ3dhcm4nO1xuICAgICAgICB0aGlzLmRldGFpbHMgPSAnZGV0YWlscycgaW4gb3B0cyA/IG9wdHMuZGV0YWlscyA6IHVuZGVmaW5lZDtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIF9kZWZpbmVfcHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gICAgaWYgKGtleSBpbiBvYmopIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIG9iajtcbn1cbmNsYXNzIEVkZ2VTdG9yZUFwaUNsaWVudEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG9wdHMpe1xuICAgICAgICBzdXBlcihvcHRzLnJlc3BvbnNlLm1lc3NhZ2UpO1xuICAgICAgICBfZGVmaW5lX3Byb3BlcnR5KHRoaXMsIFwiZGF0YVwiLCB2b2lkIDApO1xuICAgICAgICB0aGlzLm5hbWUgPSAnRWRnZVN0b3JlQXBpQ2xpZW50RXJyb3InO1xuICAgICAgICB0aGlzLmRhdGEgPSBvcHRzLnJlc3BvbnNlO1xuICAgIH1cbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgUHJveHkgdGhhdCBwcmludHMgdGhlIHBhdGggdG8gdGhlIHByb3BlcnR5IHdoZW4gY2FsbGVkLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IHBhdGhQYXJhbVByb3h5ID0gY3JlYXRlUGF0aFBhcmFtUHJveHkoKTtcbiAqIGNvbnNvbGUubG9nKHBhdGhQYXJhbVByb3h5LmN0eC51c2VyLmlkKCkpO1xuICogLy8gTG9nczogXCJjdHgudXNlci5pZFwiXG4gKiBjb25zb2xlLmxvZyhwYXRoUGFyYW1Qcm94eS5pbnB1dC50eXBlKCkpO1xuICogLy8gTG9nczogXCJpbnB1dC50eXBlXCJcbiAqIGBgYFxuICovIGZ1bmN0aW9uIGNyZWF0ZVBhdGhQYXJhbVByb3h5KCkge1xuICAgIGNvbnN0IGdldFBhdGggPSAodGFyZ2V0LCBfcHJvcCk9PntcbiAgICAgICAgY29uc3QgcHJveHlGdW5jdGlvbiA9ICgpPT50YXJnZXQ7XG4gICAgICAgIHJldHVybiBuZXcgUHJveHkocHJveHlGdW5jdGlvbiwge1xuICAgICAgICAgICAgZ2V0OiAoX3RhcmdldCwgcHJvcENoaWxkKT0+e1xuICAgICAgICAgICAgICAgIHJldHVybiBnZXRQYXRoKGAke3RhcmdldH0uJHtTdHJpbmcocHJvcENoaWxkKX1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gbmV3IFByb3h5KCgpPT4nJywge1xuICAgICAgICBnZXQ6IChfdGFyZ2V0LCBwcm9wKT0+e1xuICAgICAgICAgICAgcmV0dXJuIGdldFBhdGgoU3RyaW5nKHByb3ApKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG5jb25zdCBjcmVhdGVOZXdCdWlsZGVyID0gKGluaXREZWYsIG5ld0RlZik9PntcbiAgICBjb25zdCBtZXJnZWREZWYgPSB7XG4gICAgICAgIC4uLmluaXREZWYsXG4gICAgICAgIC4uLm5ld0RlZlxuICAgIH07XG4gICAgcmV0dXJuIGNyZWF0ZUJ1aWxkZXIoe1xuICAgICAgICB0eXBlOiBtZXJnZWREZWYudHlwZVxuICAgIH0sIG1lcmdlZERlZik7XG59O1xuZnVuY3Rpb24gY3JlYXRlQnVpbGRlcihvcHRzLCBpbml0RGVmKSB7XG4gICAgY29uc3QgX2RlZiA9IHtcbiAgICAgICAgdHlwZTogb3B0cy50eXBlLFxuICAgICAgICBpbnB1dDogei5uZXZlcigpLFxuICAgICAgICBwYXRoOiBbXSxcbiAgICAgICAgbWV0YWRhdGE6ICgpPT4oe30pLFxuICAgICAgICAuLi5pbml0RGVmXG4gICAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgICAkY29uZmlnOiB7XG4gICAgICAgICAgICBjdHg6IHVuZGVmaW5lZFxuICAgICAgICB9LFxuICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIC0gSSB0aGluayBpdCB3b3VsZCBiZSB0b28gbXVjaCB3b3JrIHRvIG1ha2UgdGhpcyB0eXBlIGNvcnJlY3QuXG4gICAgICAgIF9kZWYsXG4gICAgICAgIGlucHV0IChpbnB1dCkge1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU5ld0J1aWxkZXIoX2RlZiwge1xuICAgICAgICAgICAgICAgIGlucHV0XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgcGF0aCAocGF0aFJlc29sdmVyKSB7XG4gICAgICAgICAgICAvLyBUT0RPOiBTaG91bGQgdGhyb3cgYSBydW50aW1lIGVycm9yIGluIHRoZSBmb2xsb3dpbmcgY2FzZXM6XG4gICAgICAgICAgICAvLyAxLiBpbiBjYXNlIG9mIG11bHRpcGxlIGtleXMgaW4gb25lIG9iamVjdFxuICAgICAgICAgICAgLy8gMi4gaW4gY2FzZSBvZiBkdXBsaWNhdGUga2V5c1xuICAgICAgICAgICAgY29uc3QgcGF0aFBhcmFtUHJveHkgPSBjcmVhdGVQYXRoUGFyYW1Qcm94eSgpO1xuICAgICAgICAgICAgY29uc3QgcGFyYW1zID0gcGF0aFJlc29sdmVyKHBhdGhQYXJhbVByb3h5KTtcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVOZXdCdWlsZGVyKF9kZWYsIHtcbiAgICAgICAgICAgICAgICBwYXRoOiBwYXJhbXNcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBtZXRhZGF0YSAobWV0YWRhdGEpIHtcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVOZXdCdWlsZGVyKF9kZWYsIHtcbiAgICAgICAgICAgICAgICBtZXRhZGF0YVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIGFjY2Vzc0NvbnRyb2wgKGFjY2Vzc0NvbnRyb2wpIHtcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVOZXdCdWlsZGVyKF9kZWYsIHtcbiAgICAgICAgICAgICAgICBhY2Nlc3NDb250cm9sOiBhY2Nlc3NDb250cm9sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgYmVmb3JlVXBsb2FkIChiZWZvcmVVcGxvYWQpIHtcbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVOZXdCdWlsZGVyKF9kZWYsIHtcbiAgICAgICAgICAgICAgICBiZWZvcmVVcGxvYWRcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBiZWZvcmVEZWxldGUgKGJlZm9yZURlbGV0ZSkge1xuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU5ld0J1aWxkZXIoX2RlZiwge1xuICAgICAgICAgICAgICAgIGJlZm9yZURlbGV0ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuY2xhc3MgRWRnZVN0b3JlQnVpbGRlciB7XG4gICAgY29udGV4dCgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBFZGdlU3RvcmVCdWlsZGVyKCk7XG4gICAgfVxuICAgIGNyZWF0ZSgpIHtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZUVkZ2VTdG9yZUlubmVyKCkoKTtcbiAgICB9XG59XG5mdW5jdGlvbiBjcmVhdGVSb3V0ZXJGYWN0b3J5KCkge1xuICAgIHJldHVybiBmdW5jdGlvbiBjcmVhdGVSb3V0ZXJJbm5lcihidWNrZXRzKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAkY29uZmlnOiB7XG4gICAgICAgICAgICAgICAgY3R4OiB1bmRlZmluZWRcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBidWNrZXRzXG4gICAgICAgIH07XG4gICAgfTtcbn1cbmZ1bmN0aW9uIGluaXRCdWNrZXQodHlwZSwgY29uZmlnKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUJ1aWxkZXIoe1xuICAgICAgICB0eXBlXG4gICAgfSwge1xuICAgICAgICBidWNrZXRDb25maWc6IGNvbmZpZ1xuICAgIH0pO1xufVxuZnVuY3Rpb24gY3JlYXRlRWRnZVN0b3JlSW5uZXIoKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIGluaXRFZGdlU3RvcmVJbm5lcigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC8qKlxuICAgICAgICogQnVpbGRlciBvYmplY3QgZm9yIGNyZWF0aW5nIGFuIGltYWdlIGJ1Y2tldFxuICAgICAgICovIGltYWdlQnVja2V0IChjb25maWcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaW5pdEJ1Y2tldCgnSU1BR0UnLCBjb25maWcpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC8qKlxuICAgICAgICogQnVpbGRlciBvYmplY3QgZm9yIGNyZWF0aW5nIGEgZmlsZSBidWNrZXRcbiAgICAgICAqLyBmaWxlQnVja2V0IChjb25maWcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaW5pdEJ1Y2tldCgnRklMRScsIGNvbmZpZyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLyoqXG4gICAgICAgKiBDcmVhdGUgYSByb3V0ZXJcbiAgICAgICAqLyByb3V0ZXI6IGNyZWF0ZVJvdXRlckZhY3RvcnkoKVxuICAgICAgICB9O1xuICAgIH07XG59XG4vKipcbiAqIEluaXRpYWxpemUgRWRnZVN0b3JlIC0gYmUgZG9uZSBleGFjdGx5IG9uY2UgcGVyIGJhY2tlbmRcbiAqLyBjb25zdCBpbml0RWRnZVN0b3JlID0gbmV3IEVkZ2VTdG9yZUJ1aWxkZXIoKTsgLy8g4oaT4oaT4oaTIFRZUEUgVEVTVFMg4oaT4oaT4oaTXG4gLy8gdHlwZSBDb250ZXh0ID0ge1xuIC8vICAgdXNlcklkOiBzdHJpbmc7XG4gLy8gICB1c2VyUm9sZTogJ2FkbWluJyB8ICd2aXNpdG9yJztcbiAvLyB9O1xuIC8vIGNvbnN0IGVzID0gaW5pdEVkZ2VTdG9yZS5jb250ZXh0PENvbnRleHQ+KCkuY3JlYXRlKCk7XG4gLy8gY29uc3QgaW1hZ2VzQnVja2V0ID0gZXMuaW1hZ2VCdWNrZXQoKVxuIC8vICAgLmlucHV0KFxuIC8vICAgICB6Lm9iamVjdCh7XG4gLy8gICAgICAgdHlwZTogei5lbnVtKFsncHJvZmlsZScsICdwb3N0J10pLFxuIC8vICAgICAgIGV4dGVuc2lvbjogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxuIC8vICAgICB9KSxcbiAvLyAgIClcbiAvLyAgIC5wYXRoKCh7IGN0eCwgaW5wdXQgfSkgPT4gW3sgYXV0aG9yOiBjdHgudXNlcklkIH0sIHsgdHlwZTogaW5wdXQudHlwZSB9XSlcbiAvLyAgIC5tZXRhZGF0YSgoeyBjdHgsIGlucHV0IH0pID0+ICh7XG4gLy8gICAgIGV4dGVuc2lvbjogaW5wdXQuZXh0ZW5zaW9uLFxuIC8vICAgICByb2xlOiBjdHgudXNlclJvbGUsXG4gLy8gICB9KSlcbiAvLyAgIC5iZWZvcmVVcGxvYWQoKCkgPT4ge1xuIC8vICAgICByZXR1cm4gdHJ1ZTtcbiAvLyAgIH0pO1xuIC8vIGNvbnN0IGEgPSBlcy5pbWFnZUJ1Y2tldCgpXG4gLy8gICAuaW5wdXQoei5vYmplY3QoeyB0eXBlOiB6LnN0cmluZygpLCBzb21lTWV0YTogei5zdHJpbmcoKS5vcHRpb25hbCgpIH0pKVxuIC8vICAgLnBhdGgoKHsgY3R4LCBpbnB1dCB9KSA9PiBbeyBhdXRob3I6IGN0eC51c2VySWQgfSwgeyB0eXBlOiBpbnB1dC50eXBlIH1dKVxuIC8vICAgLm1ldGFkYXRhKCh7IGN0eCwgaW5wdXQgfSkgPT4gKHtcbiAvLyAgICAgcm9sZTogY3R4LnVzZXJSb2xlLFxuIC8vICAgICBzb21lTWV0YTogaW5wdXQuc29tZU1ldGEsXG4gLy8gICB9KSlcbiAvLyAgIC5hY2Nlc3NDb250cm9sKHtcbiAvLyAgICAgT1I6IFtcbiAvLyAgICAgICB7XG4gLy8gICAgICAgICB1c2VySWQ6IHsgcGF0aDogJ2F1dGhvcicgfSwgLy8gdGhpcyB3aWxsIGNoZWNrIGlmIHRoZSB1c2VySWQgaXMgdGhlIHNhbWUgYXMgdGhlIGF1dGhvciBpbiB0aGUgcGF0aCBwYXJhbWV0ZXJcbiAvLyAgICAgICB9LFxuIC8vICAgICAgIHtcbiAvLyAgICAgICAgIHVzZXJSb2xlOiAnYWRtaW4nLCAvLyB0aGlzIGlzIHRoZSBzYW1lIGFzIHsgdXNlclJvbGU6IHsgZXE6IFwiYWRtaW5cIiB9IH1cbiAvLyAgICAgICB9LFxuIC8vICAgICBdLFxuIC8vICAgfSlcbiAvLyAgIC5iZWZvcmVVcGxvYWQoKHsgY3R4LCBpbnB1dCB9KSA9PiB7XG4gLy8gICAgIHJldHVybiB0cnVlO1xuIC8vICAgfSlcbiAvLyAgIC5iZWZvcmVEZWxldGUoKHsgY3R4LCBmaWxlIH0pID0+IHtcbiAvLyAgICAgcmV0dXJuIHRydWU7XG4gLy8gICB9KTtcbiAvLyBjb25zdCBiID0gZXMuaW1hZ2VCdWNrZXQoKS5wYXRoKCh7IGN0eCB9KSA9PiBbeyBhdXRob3I6IGN0eC51c2VySWQgfV0pO1xuIC8vIGNvbnN0IHJvdXRlciA9IGVzLnJvdXRlcih7XG4gLy8gICBvcmlnaW5hbDogaW1hZ2VzQnVja2V0LFxuIC8vICAgaW1hZ2VCdWNrZXQ6IGEsXG4gLy8gICBpbWFnZUJ1Y2tldDI6IGIsXG4gLy8gfSk7XG4gLy8gZXhwb3J0IHsgcm91dGVyIH07XG4gLy8gdHlwZSBMaXN0RmlsZXNSZXNwb25zZTxUQnVja2V0IGV4dGVuZHMgQW55Um91dGVyWydidWNrZXRzJ11bc3RyaW5nXT4gPSB7XG4gLy8gICBkYXRhOiB7XG4gLy8gICAgIC8vIHVybDogc3RyaW5nO1xuIC8vICAgICAvLyBzaXplOiBudW1iZXI7XG4gLy8gICAgIC8vIHVwbG9hZGVkQXQ6IERhdGU7XG4gLy8gICAgIC8vIG1ldGFkYXRhOiBJbmZlck1ldGFkYXRhT2JqZWN0PFRCdWNrZXQ+O1xuIC8vICAgICBwYXRoOiBJbmZlckJ1Y2tldFBhdGhLZXlzPFRCdWNrZXQ+IGV4dGVuZHMgc3RyaW5nID8ge1xuIC8vICAgICAgIFtrZXk6IHN0cmluZ106IHN0cmluZztcbiAvLyAgICAgfSA6e1xuIC8vICAgICAgIFtUS2V5IGluIEluZmVyQnVja2V0UGF0aEtleXM8VEJ1Y2tldD5dOiBzdHJpbmc7XG4gLy8gICAgIH07XG4gLy8gICB9W107XG4gLy8gICBwYWdpbmF0aW9uOiB7XG4gLy8gICAgIGN1cnJlbnRQYWdlOiBudW1iZXI7XG4gLy8gICAgIHRvdGFsUGFnZXM6IG51bWJlcjtcbiAvLyAgICAgdG90YWxDb3VudDogbnVtYmVyO1xuIC8vICAgfTtcbiAvLyB9O1xuIC8vIHR5cGUgVFBhdGhLZXlzID0gJ2F1dGhvcicgfCAndHlwZSc7XG4gLy8gdHlwZSBUUGF0aEtleXMyID0gSW5mZXJCdWNrZXRQYXRoS2V5czxBbnlCdWlsZGVyPjtcbiAvLyB0eXBlIE9iamVjdFdpdGhLZXlzPFRLZXlzIGV4dGVuZHMgc3RyaW5nPiA9IHtcbiAvLyAgIFtUS2V5IGluIFRLZXlzXTogc3RyaW5nO1xuIC8vIH07XG4gLy8gdHlwZSBUZXN0MSA9IE9iamVjdFdpdGhLZXlzPFRQYXRoS2V5cz47XG4gLy8gdHlwZSBUZXN0MiA9IE9iamVjdFdpdGhLZXlzPFRQYXRoS2V5czI+O1xuIC8vIHR5cGUgUGF0aEtleXMgPSBJbmZlckJ1Y2tldFBhdGhLZXlzPHR5cGVvZiByb3V0ZXIuYnVja2V0cy5pbWFnZUJ1Y2tldD47XG4gLy8gdHlwZSBNZXRhZGF0YUtleXMgPSBJbmZlck1ldGFkYXRhT2JqZWN0PHR5cGVvZiByb3V0ZXIuYnVja2V0cy5pbWFnZUJ1Y2tldD47XG4gLy8gdHlwZSBNeUVkZ2VTdG9yZVJvdXRlciA9IHR5cGVvZiByb3V0ZXI7XG4gLy8gdHlwZSBNeUFjY2Vzc0NvbnRyb2wgPSBBY2Nlc3NDb250cm9sU2NoZW1hPENvbnRleHQsIEFueURlZj47XG5cbmV4cG9ydCB7IEVER0VfU1RPUkVfRVJST1JfQ09ERVMsIEVkZ2VTdG9yZUFwaUNsaWVudEVycm9yLCBFZGdlU3RvcmVFcnJvciwgaW5pdEVkZ2VTdG9yZSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@edgestore+shared@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/shared/dist/index.mjs\n");

/***/ })

};
;