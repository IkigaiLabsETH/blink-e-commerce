"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8";
exports.ids = ["vendor-chunks/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/adapters/next/app/index.mjs":
/*!*************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/adapters/next/app/index.mjs ***!
  \*************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEdgeStoreNextHandler: () => (/* binding */ createEdgeStoreNextHandler)\n/* harmony export */ });\n/* harmony import */ var _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @edgestore/shared */ \"(rsc)/./node_modules/.pnpm/@edgestore+shared@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/shared/dist/index.mjs\");\n/* harmony import */ var _utils_f6f56d38_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../utils-f6f56d38.mjs */ \"(rsc)/./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/utils-f6f56d38.mjs\");\n/* harmony import */ var _providers_edgestore_index_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../providers/edgestore/index.mjs */ \"(rsc)/./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/providers/edgestore/index.mjs\");\n/* harmony import */ var _shared_039276af_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../shared-039276af.mjs */ \"(rsc)/./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/shared-039276af.mjs\");\n/* harmony import */ var _index_28efdacf_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../index-28efdacf.mjs */ \"(rsc)/./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/index-28efdacf.mjs\");\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! cookie */ \"(rsc)/./node_modules/.pnpm/cookie@0.5.0/node_modules/cookie/index.js\");\n\n\n\n\n\n\n\n\n\n\nfunction createEdgeStoreNextHandler(config) {\n    const { provider = (0,_providers_edgestore_index_mjs__WEBPACK_IMPORTED_MODULE_2__.EdgeStoreProvider)() } = config;\n    const log = new _utils_f6f56d38_mjs__WEBPACK_IMPORTED_MODULE_1__.L(config.logLevel);\n    globalThis._EDGE_STORE_LOGGER = log;\n    log.debug('Creating Edge Store Next handler (app adapter)');\n    return async (req)=>{\n        try {\n            if (!('nextUrl' in req)) throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n                message: 'Error running the app adapter. Make sure you are importing the correct adapter in your router configuration',\n                code: 'SERVER_ERROR'\n            });\n            const pathname = req.nextUrl.pathname;\n            if ((0,_utils_f6f56d38_mjs__WEBPACK_IMPORTED_MODULE_1__.m)(pathname, '/health')) {\n                return new Response('OK', {\n                    status: 200\n                });\n            } else if ((0,_utils_f6f56d38_mjs__WEBPACK_IMPORTED_MODULE_1__.m)(pathname, '/init')) {\n                let ctx = {};\n                try {\n                    ctx = 'createContext' in config ? await config.createContext({\n                        req\n                    }) : {};\n                } catch (err) {\n                    throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n                        message: 'Error creating context',\n                        code: 'CREATE_CONTEXT_ERROR',\n                        cause: err instanceof Error ? err : undefined\n                    });\n                }\n                const { newCookies, token, baseUrl } = await (0,_shared_039276af_mjs__WEBPACK_IMPORTED_MODULE_3__.i)({\n                    ctx,\n                    provider,\n                    router: config.router\n                });\n                const res = new Response(JSON.stringify({\n                    token,\n                    baseUrl\n                }), {\n                    status: 200,\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n                for (const cookie of newCookies){\n                    res.headers.append('Set-Cookie', cookie);\n                }\n                return res;\n            } else if ((0,_utils_f6f56d38_mjs__WEBPACK_IMPORTED_MODULE_1__.m)(pathname, '/request-upload')) {\n                const res = await (0,_shared_039276af_mjs__WEBPACK_IMPORTED_MODULE_3__.r)({\n                    provider,\n                    router: config.router,\n                    body: await req.json(),\n                    ctxToken: req.cookies.get('edgestore-ctx')?.value\n                });\n                return new Response(JSON.stringify(res), {\n                    status: 200,\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n            } else if ((0,_utils_f6f56d38_mjs__WEBPACK_IMPORTED_MODULE_1__.m)(pathname, '/request-upload-parts')) {\n                const res = await (0,_shared_039276af_mjs__WEBPACK_IMPORTED_MODULE_3__.a)({\n                    provider,\n                    router: config.router,\n                    body: await req.json(),\n                    ctxToken: req.cookies.get('edgestore-ctx')?.value\n                });\n                return new Response(JSON.stringify(res), {\n                    status: 200,\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n            } else if ((0,_utils_f6f56d38_mjs__WEBPACK_IMPORTED_MODULE_1__.m)(pathname, '/complete-multipart-upload')) {\n                await (0,_shared_039276af_mjs__WEBPACK_IMPORTED_MODULE_3__.c)({\n                    provider,\n                    router: config.router,\n                    body: await req.json(),\n                    ctxToken: req.cookies.get('edgestore-ctx')?.value\n                });\n                return new Response(null, {\n                    status: 200\n                });\n            } else if ((0,_utils_f6f56d38_mjs__WEBPACK_IMPORTED_MODULE_1__.m)(pathname, '/confirm-upload')) {\n                const res = await (0,_shared_039276af_mjs__WEBPACK_IMPORTED_MODULE_3__.d)({\n                    provider,\n                    router: config.router,\n                    body: await req.json(),\n                    ctxToken: req.cookies.get('edgestore-ctx')?.value\n                });\n                return new Response(JSON.stringify(res), {\n                    status: 200,\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n            } else if ((0,_utils_f6f56d38_mjs__WEBPACK_IMPORTED_MODULE_1__.m)(pathname, '/delete-file')) {\n                const res = await (0,_shared_039276af_mjs__WEBPACK_IMPORTED_MODULE_3__.e)({\n                    provider,\n                    router: config.router,\n                    body: await req.json(),\n                    ctxToken: req.cookies.get('edgestore-ctx')?.value\n                });\n                return new Response(JSON.stringify(res), {\n                    status: 200,\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n            } else if ((0,_utils_f6f56d38_mjs__WEBPACK_IMPORTED_MODULE_1__.m)(pathname, '/proxy-file')) {\n                const url = req.nextUrl.searchParams.get('url');\n                if (typeof url === 'string') {\n                    const proxyRes = await fetch(url, {\n                        headers: {\n                            cookie: req.cookies.toString() ?? ''\n                        }\n                    });\n                    const data = await proxyRes.arrayBuffer();\n                    return new Response(data, {\n                        status: proxyRes.status,\n                        headers: {\n                            'Content-Type': proxyRes.headers.get('Content-Type') ?? 'application/octet-stream'\n                        }\n                    });\n                } else {\n                    return new Response(null, {\n                        status: 400\n                    });\n                }\n            } else {\n                return new Response(null, {\n                    status: 404\n                });\n            }\n        } catch (err) {\n            if (err instanceof _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError) {\n                log[err.level](err.formattedMessage());\n                if (err.cause) log[err.level](err.cause);\n                return new Response(JSON.stringify(err.formattedJson()), {\n                    status: _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EDGE_STORE_ERROR_CODES[err.code],\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n            }\n            log.error(err);\n            return new Response(JSON.stringify(new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n                message: 'Internal server error',\n                code: 'SERVER_ERROR'\n            }).formattedJson()), {\n                status: 500,\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n        }\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/adapters/next/app/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/index-28efdacf.mjs":
/*!****************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/index-28efdacf.mjs ***!
  \****************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   E: () => (/* binding */ EdgeStoreCredentialsError),\n/* harmony export */   e: () => (/* binding */ edgeStoreRawSdk),\n/* harmony export */   i: () => (/* binding */ initEdgeStoreSdk)\n/* harmony export */ });\n/* harmony import */ var _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @edgestore/shared */ \"(rsc)/./node_modules/.pnpm/@edgestore+shared@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/shared/dist/index.mjs\");\n\n\nconst DEFAULT_MESSAGE = `Missing EDGE_STORE_ACCESS_KEY or EDGE_STORE_SECRET_KEY. \nThis can happen if you are trying to import something related to the backend of Edge Store in a client component.`;\nclass EdgeStoreCredentialsError extends Error {\n    constructor(message = DEFAULT_MESSAGE){\n        super(message);\n        this.name = 'EdgeStoreCredentialsError';\n    }\n}\n\nconst API_ENDPOINT = process.env.EDGE_STORE_API_ENDPOINT ?? 'https://api.edgestore.dev';\nasync function makeRequest(params) {\n    const { body, accessKey, secretKey, path } = params;\n    const res = await fetch(`${API_ENDPOINT}${path}`, {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Basic ${Buffer.from(`${accessKey}:${secretKey}`).toString('base64')}`\n        }\n    });\n    if (!res.ok) {\n        throw new Error(`Failed to make request to ${path}: ${await res.text()}`);\n    }\n    return await res.json();\n}\nconst edgeStoreRawSdk = {\n    async getToken (params) {\n        const reqBuckets = Object.entries(params.router.buckets).reduce((acc, [bucketName, bucket])=>{\n            acc[bucketName] = {\n                path: bucket._def.path.map((p)=>{\n                    const paramEntries = Object.entries(p);\n                    if (paramEntries[0] === undefined) {\n                        throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n                            message: `Empty path param found in: ${JSON.stringify(bucket._def.path)}`,\n                            code: 'SERVER_ERROR'\n                        });\n                    }\n                    const [key, value] = paramEntries[0];\n                    return {\n                        key,\n                        value: value()\n                    };\n                }),\n                accessControl: bucket._def.accessControl\n            };\n            return acc;\n        }, {});\n        const { token } = await makeRequest({\n            body: {\n                ctx: params.ctx,\n                buckets: reqBuckets\n            },\n            accessKey: params.accessKey,\n            secretKey: params.secretKey,\n            path: '/get-token'\n        });\n        return token;\n    },\n    async getFile ({ accessKey, secretKey, url }) {\n        return await makeRequest({\n            path: '/get-file',\n            accessKey,\n            secretKey,\n            body: {\n                url\n            }\n        });\n    },\n    async requestUpload ({ accessKey, secretKey, bucketName, bucketType, fileInfo, multipart }) {\n        const res = await makeRequest({\n            path: '/request-upload',\n            accessKey,\n            secretKey,\n            body: {\n                multipart,\n                bucketName,\n                bucketType,\n                isPublic: fileInfo.isPublic,\n                path: fileInfo.path,\n                extension: fileInfo.extension,\n                size: fileInfo.size,\n                mimeType: fileInfo.type,\n                metadata: fileInfo.metadata,\n                fileName: fileInfo.fileName,\n                replaceTargetUrl: fileInfo.replaceTargetUrl,\n                isTemporary: fileInfo.temporary\n            }\n        });\n        return {\n            multipart: res.multipart,\n            signedUrl: res.signedUrl,\n            accessUrl: res.url,\n            path: res.path,\n            thumbnailUrl: res.thumbnailUrl\n        };\n    },\n    async requestUploadParts ({ accessKey, secretKey, key, multipart }) {\n        const res = await makeRequest({\n            path: '/request-upload-parts',\n            accessKey,\n            secretKey,\n            body: {\n                multipart,\n                key\n            }\n        });\n        return {\n            multipart: res.multipart\n        };\n    },\n    async completeMultipartUpload ({ accessKey, secretKey, uploadId, key, parts }) {\n        return await makeRequest({\n            path: '/complete-multipart-upload',\n            accessKey,\n            secretKey,\n            body: {\n                uploadId,\n                key,\n                parts\n            }\n        });\n    },\n    async confirmUpload ({ accessKey, secretKey, url }) {\n        return await makeRequest({\n            path: '/confirm-upload',\n            accessKey,\n            secretKey,\n            body: {\n                url\n            }\n        });\n    },\n    async deleteFile ({ accessKey, secretKey, url }) {\n        return await makeRequest({\n            path: '/delete-file',\n            accessKey,\n            secretKey,\n            body: {\n                url\n            }\n        });\n    },\n    async listFiles ({ accessKey, secretKey, bucketName, filter, pagination }) {\n        return await makeRequest({\n            path: '/list-files',\n            accessKey,\n            secretKey,\n            body: {\n                bucketName,\n                filter,\n                pagination\n            }\n        });\n    }\n};\nfunction initEdgeStoreSdk(params) {\n    const { accessKey = process.env.EDGE_STORE_ACCESS_KEY, secretKey = process.env.EDGE_STORE_SECRET_KEY } = params ?? {};\n    if (!accessKey || !secretKey) {\n        throw new EdgeStoreCredentialsError();\n    }\n    return {\n        async getToken (params) {\n            return await edgeStoreRawSdk.getToken({\n                accessKey,\n                secretKey,\n                ctx: params.ctx,\n                router: params.router\n            });\n        },\n        async getFile ({ url }) {\n            return await edgeStoreRawSdk.getFile({\n                accessKey,\n                secretKey,\n                url\n            });\n        },\n        async requestUpload ({ bucketName, bucketType, fileInfo, multipart }) {\n            return await edgeStoreRawSdk.requestUpload({\n                accessKey,\n                secretKey,\n                bucketName,\n                bucketType,\n                fileInfo,\n                multipart\n            });\n        },\n        async requestUploadParts ({ key, multipart }) {\n            return await edgeStoreRawSdk.requestUploadParts({\n                accessKey,\n                secretKey,\n                key,\n                multipart\n            });\n        },\n        async completeMultipartUpload ({ uploadId, key, parts }) {\n            return await edgeStoreRawSdk.completeMultipartUpload({\n                accessKey,\n                secretKey,\n                uploadId,\n                key,\n                parts\n            });\n        },\n        async confirmUpload ({ url }) {\n            return await edgeStoreRawSdk.confirmUpload({\n                accessKey,\n                secretKey,\n                url\n            });\n        },\n        async deleteFile ({ url }) {\n            return await edgeStoreRawSdk.deleteFile({\n                accessKey,\n                secretKey,\n                url\n            });\n        },\n        async listFiles (params) {\n            return await edgeStoreRawSdk.listFiles({\n                accessKey,\n                secretKey,\n                ...params\n            });\n        }\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/index-28efdacf.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/index.mjs":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/index.mjs ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initEdgeStore: () => (/* reexport safe */ _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.initEdgeStore)\n/* harmony export */ });\n/* harmony import */ var _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @edgestore/shared */ \"(rsc)/./node_modules/.pnpm/@edgestore+shared@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/shared/dist/index.mjs\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGVkZ2VzdG9yZStzZXJ2ZXJAMC4yLjJfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfem9kQDMuMjMuOC9ub2RlX21vZHVsZXMvQGVkZ2VzdG9yZS9zZXJ2ZXIvZGlzdC9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibGluay1lLWNvbW1lcmNlLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0BlZGdlc3RvcmUrc2VydmVyQDAuMi4yX3JlYWN0LWRvbUAxOC4zLjFfcmVhY3RAMTguMy4xX3pvZEAzLjIzLjgvbm9kZV9tb2R1bGVzL0BlZGdlc3RvcmUvc2VydmVyL2Rpc3QvaW5kZXgubWpzPzAxMzAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgaW5pdEVkZ2VTdG9yZSB9IGZyb20gJ0BlZGdlc3RvcmUvc2hhcmVkJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/providers/edgestore/index.mjs":
/*!***************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/providers/edgestore/index.mjs ***!
  \***************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EdgeStoreProvider: () => (/* binding */ EdgeStoreProvider)\n/* harmony export */ });\n/* harmony import */ var _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @edgestore/shared */ \"(rsc)/./node_modules/.pnpm/@edgestore+shared@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/shared/dist/index.mjs\");\n/* harmony import */ var _index_28efdacf_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index-28efdacf.mjs */ \"(rsc)/./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/index-28efdacf.mjs\");\n\n\n\nconst DEFAULT_BASE_URL = 'https://files.edgestore.dev';\nfunction EdgeStoreProvider(options) {\n    const { accessKey = process.env.EDGE_STORE_ACCESS_KEY, secretKey = process.env.EDGE_STORE_SECRET_KEY } = options ?? {};\n    const baseUrl = process.env.EDGE_STORE_BASE_URL ?? DEFAULT_BASE_URL;\n    if (!accessKey || !secretKey) {\n        throw new _index_28efdacf_mjs__WEBPACK_IMPORTED_MODULE_1__.E();\n    }\n    const edgeStoreSdk = (0,_index_28efdacf_mjs__WEBPACK_IMPORTED_MODULE_1__.i)({\n        accessKey,\n        secretKey\n    });\n    return {\n        init: async ({ ctx, router })=>{\n            const token = await edgeStoreSdk.getToken({\n                ctx,\n                router\n            });\n            return {\n                token\n            };\n        },\n        getBaseUrl () {\n            return baseUrl;\n        },\n        getFile: async ({ url })=>{\n            const { uploadedAt, ...rest } = await edgeStoreSdk.getFile({\n                url\n            });\n            return {\n                uploadedAt: new Date(uploadedAt),\n                ...rest\n            };\n        },\n        async requestUpload ({ bucketName, bucketType, fileInfo }) {\n            // multipart upload if file is bigger than a certain size\n            const MULTIPART_THRESHOLD = 10 * 1024 * 1024; // 10MB\n            let partSize = 5 * 1024 * 1024; // 5MB\n            if (fileInfo.size > MULTIPART_THRESHOLD) {\n                let totalParts = Math.ceil(fileInfo.size / partSize);\n                if (totalParts > 1000) {\n                    // the maximum number of parts is 1000\n                    totalParts = 1000;\n                    partSize = Math.ceil(fileInfo.size / totalParts);\n                }\n                const res = await edgeStoreSdk.requestUpload({\n                    bucketName,\n                    bucketType,\n                    fileInfo,\n                    multipart: {\n                        parts: Array.from({\n                            length: totalParts\n                        }).map((_, index)=>index + 1)\n                    }\n                });\n                const multipart = res.multipart ? {\n                    key: res.multipart.key,\n                    uploadId: res.multipart.uploadId,\n                    parts: res.multipart.parts.map((part)=>({\n                            partNumber: part.partNumber,\n                            uploadUrl: part.signedUrl\n                        })),\n                    partSize,\n                    totalParts\n                } : undefined;\n                if (multipart) {\n                    return {\n                        accessUrl: res.accessUrl,\n                        thumbnailUrl: res.thumbnailUrl,\n                        multipart\n                    };\n                } else if (res.signedUrl) {\n                    return {\n                        accessUrl: res.accessUrl,\n                        uploadUrl: res.signedUrl,\n                        thumbnailUrl: res.thumbnailUrl\n                    };\n                } else {\n                    throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n                        message: 'Could not get upload url',\n                        code: 'SERVER_ERROR'\n                    });\n                }\n            }\n            const res = await edgeStoreSdk.requestUpload({\n                bucketName,\n                bucketType,\n                fileInfo\n            });\n            if (res.signedUrl) {\n                return {\n                    accessUrl: res.accessUrl,\n                    uploadUrl: res.signedUrl,\n                    thumbnailUrl: res.thumbnailUrl\n                };\n            }\n            throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n                message: 'Could not get upload url',\n                code: 'SERVER_ERROR'\n            });\n        },\n        requestUploadParts: async ({ multipart, path })=>{\n            const res = await edgeStoreSdk.requestUploadParts({\n                multipart,\n                key: path\n            });\n            return {\n                multipart: {\n                    uploadId: res.multipart.uploadId,\n                    parts: res.multipart.parts.map((part)=>({\n                            partNumber: part.partNumber,\n                            uploadUrl: part.signedUrl\n                        }))\n                }\n            };\n        },\n        completeMultipartUpload: async ({ uploadId, key, parts })=>{\n            return await edgeStoreSdk.completeMultipartUpload({\n                uploadId,\n                key,\n                parts\n            });\n        },\n        confirmUpload: async ({ url })=>{\n            return await edgeStoreSdk.confirmUpload({\n                url\n            });\n        },\n        deleteFile: async ({ url })=>{\n            return await edgeStoreSdk.deleteFile({\n                url\n            });\n        }\n    };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/providers/edgestore/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/shared-039276af.mjs":
/*!*****************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/shared-039276af.mjs ***!
  \*****************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ requestUploadParts),\n/* harmony export */   b: () => (/* binding */ buildPath),\n/* harmony export */   c: () => (/* binding */ completeMultipartUpload),\n/* harmony export */   d: () => (/* binding */ confirmUpload),\n/* harmony export */   e: () => (/* binding */ deleteFile),\n/* harmony export */   i: () => (/* binding */ init),\n/* harmony export */   p: () => (/* binding */ parsePath),\n/* harmony export */   r: () => (/* binding */ requestUpload)\n/* harmony export */ });\n/* harmony import */ var _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @edgestore/shared */ \"(rsc)/./node_modules/.pnpm/@edgestore+shared@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/shared/dist/index.mjs\");\n/* harmony import */ var _panva_hkdf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @panva/hkdf */ \"(rsc)/./node_modules/.pnpm/@panva+hkdf@1.2.1/node_modules/@panva/hkdf/dist/node/esm/index.js\");\n/* harmony import */ var cookie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cookie */ \"(rsc)/./node_modules/.pnpm/cookie@0.5.0/node_modules/cookie/index.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/.pnpm/jose@4.15.9/node_modules/jose/dist/node/esm/jwt/encrypt.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/.pnpm/jose@4.15.9/node_modules/jose/dist/node/esm/jwt/decrypt.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-node/v4.js\");\n\n\n\n\n\n\nconst IMAGE_MIME_TYPES = [\n    'image/jpeg',\n    'image/png',\n    'image/gif',\n    'image/webp',\n    'image/svg+xml',\n    'image/tiff',\n    'image/bmp',\n    'image/x-icon'\n];\n\n// TODO: change it to 1 hour when we have a way to refresh the token\nconst DEFAULT_MAX_AGE = 30 * 24 * 60 * 60; // 30 days\nasync function init(params) {\n    const log = globalThis._EDGE_STORE_LOGGER;\n    const { ctx, provider, router } = params;\n    log.debug('Running [init]', {\n        ctx\n    });\n    const ctxToken = await encryptJWT(ctx);\n    const { token } = await provider.init({\n        ctx,\n        router: router\n    });\n    const newCookies = [\n        (0,cookie__WEBPACK_IMPORTED_MODULE_1__.serialize)('edgestore-ctx', ctxToken, {\n            path: '/',\n            maxAge: DEFAULT_MAX_AGE\n        })\n    ];\n    if (token) {\n        newCookies.push((0,cookie__WEBPACK_IMPORTED_MODULE_1__.serialize)('edgestore-token', token, {\n            path: '/',\n            maxAge: DEFAULT_MAX_AGE\n        }));\n    }\n    const baseUrl = await provider.getBaseUrl();\n    log.debug('Finished [init]', {\n        ctx,\n        newCookies,\n        token,\n        baseUrl\n    });\n    return {\n        newCookies,\n        token,\n        baseUrl\n    };\n}\nasync function requestUpload(params) {\n    const { provider, router, ctxToken, body: { bucketName, input, fileInfo } } = params;\n    const log = globalThis._EDGE_STORE_LOGGER;\n    log.debug('Running [requestUpload]', {\n        bucketName,\n        input,\n        fileInfo\n    });\n    if (!ctxToken) {\n        throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n            message: 'Missing edgestore-ctx cookie',\n            code: 'UNAUTHORIZED'\n        });\n    }\n    const ctx = await getContext(ctxToken);\n    log.debug('Decrypted Context', {\n        ctx\n    });\n    const bucket = router.buckets[bucketName];\n    if (!bucket) {\n        throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n            message: `Bucket ${bucketName} not found`,\n            code: 'BAD_REQUEST'\n        });\n    }\n    if (bucket._def.beforeUpload) {\n        log.debug('Running [beforeUpload]');\n        const canUpload = await bucket._def.beforeUpload?.({\n            ctx,\n            input,\n            fileInfo: {\n                size: fileInfo.size,\n                type: fileInfo.type,\n                fileName: fileInfo.fileName,\n                extension: fileInfo.extension,\n                replaceTargetUrl: fileInfo.replaceTargetUrl,\n                temporary: fileInfo.temporary\n            }\n        });\n        log.debug('Finished [beforeUpload]', {\n            canUpload\n        });\n        if (!canUpload) {\n            throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n                message: 'Upload not allowed for the current context',\n                code: 'UPLOAD_NOT_ALLOWED'\n            });\n        }\n    }\n    if (bucket._def.type === 'IMAGE') {\n        if (!IMAGE_MIME_TYPES.includes(fileInfo.type)) {\n            throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n                code: 'MIME_TYPE_NOT_ALLOWED',\n                message: 'Only images are allowed in this bucket',\n                details: {\n                    allowedMimeTypes: IMAGE_MIME_TYPES,\n                    mimeType: fileInfo.type\n                }\n            });\n        }\n    }\n    if (bucket._def.bucketConfig?.maxSize) {\n        if (fileInfo.size > bucket._def.bucketConfig.maxSize) {\n            throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n                code: 'FILE_TOO_LARGE',\n                message: `File size is too big. Max size is ${bucket._def.bucketConfig.maxSize}`,\n                details: {\n                    maxFileSize: bucket._def.bucketConfig.maxSize,\n                    fileSize: fileInfo.size\n                }\n            });\n        }\n    }\n    if (bucket._def.bucketConfig?.accept) {\n        const accept = bucket._def.bucketConfig.accept;\n        let accepted = false;\n        for (const acceptedMimeType of accept){\n            if (acceptedMimeType.endsWith('/*')) {\n                const mimeType = acceptedMimeType.replace('/*', '');\n                if (fileInfo.type.startsWith(mimeType)) {\n                    accepted = true;\n                    break;\n                }\n            } else if (fileInfo.type === acceptedMimeType) {\n                accepted = true;\n                break;\n            }\n        }\n        if (!accepted) {\n            throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n                code: 'MIME_TYPE_NOT_ALLOWED',\n                message: `\"${fileInfo.type}\" is not allowed. Accepted types are ${JSON.stringify(accept)}`,\n                details: {\n                    allowedMimeTypes: accept,\n                    mimeType: fileInfo.type\n                }\n            });\n        }\n    }\n    const path = buildPath({\n        fileInfo,\n        bucket,\n        pathAttrs: {\n            ctx,\n            input\n        }\n    });\n    const metadata = await bucket._def.metadata?.({\n        ctx,\n        input\n    });\n    const isPublic = bucket._def.accessControl === undefined;\n    log.debug('upload info', {\n        path,\n        metadata,\n        isPublic,\n        bucketType: bucket._def.type\n    });\n    const requestUploadRes = await provider.requestUpload({\n        bucketName,\n        bucketType: bucket._def.type,\n        fileInfo: {\n            ...fileInfo,\n            path,\n            isPublic,\n            metadata\n        }\n    });\n    const { parsedPath, pathOrder } = parsePath(path);\n    log.debug('Finished [requestUpload]');\n    return {\n        ...requestUploadRes,\n        size: fileInfo.size,\n        uploadedAt: new Date().toISOString(),\n        path: parsedPath,\n        pathOrder,\n        metadata\n    };\n}\nasync function requestUploadParts(params) {\n    const { provider, ctxToken, body: { multipart, path } } = params;\n    const log = globalThis._EDGE_STORE_LOGGER;\n    log.debug('Running [requestUploadParts]', {\n        multipart,\n        path\n    });\n    if (!ctxToken) {\n        throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n            message: 'Missing edgestore-ctx cookie',\n            code: 'UNAUTHORIZED'\n        });\n    }\n    await getContext(ctxToken); // just to check if the token is valid\n    const res = await provider.requestUploadParts({\n        multipart,\n        path\n    });\n    log.debug('Finished [requestUploadParts]');\n    return res;\n}\nasync function completeMultipartUpload(params) {\n    const { provider, router, ctxToken, body: { bucketName, uploadId, key, parts } } = params;\n    const log = globalThis._EDGE_STORE_LOGGER;\n    log.debug('Running [completeMultipartUpload]', {\n        bucketName,\n        uploadId,\n        key\n    });\n    if (!ctxToken) {\n        throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n            message: 'Missing edgestore-ctx cookie',\n            code: 'UNAUTHORIZED'\n        });\n    }\n    await getContext(ctxToken); // just to check if the token is valid\n    const bucket = router.buckets[bucketName];\n    if (!bucket) {\n        throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n            message: `Bucket ${bucketName} not found`,\n            code: 'BAD_REQUEST'\n        });\n    }\n    const res = await provider.completeMultipartUpload({\n        uploadId,\n        key,\n        parts\n    });\n    log.debug('Finished [completeMultipartUpload]');\n    return res;\n}\nasync function confirmUpload(params) {\n    const { provider, router, ctxToken, body: { bucketName, url } } = params;\n    const log = globalThis._EDGE_STORE_LOGGER;\n    log.debug('Running [confirmUpload]', {\n        bucketName,\n        url\n    });\n    if (!ctxToken) {\n        throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n            message: 'Missing edgestore-ctx cookie',\n            code: 'UNAUTHORIZED'\n        });\n    }\n    await getContext(ctxToken); // just to check if the token is valid\n    const bucket = router.buckets[bucketName];\n    if (!bucket) {\n        throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n            message: `Bucket ${bucketName} not found`,\n            code: 'BAD_REQUEST'\n        });\n    }\n    const res = await provider.confirmUpload({\n        bucket,\n        url: unproxyUrl(url)\n    });\n    log.debug('Finished [confirmUpload]');\n    return res;\n}\nasync function deleteFile(params) {\n    const { provider, router, ctxToken, body: { bucketName, url } } = params;\n    const log = globalThis._EDGE_STORE_LOGGER;\n    log.debug('Running [deleteFile]', {\n        bucketName,\n        url\n    });\n    if (!ctxToken) {\n        throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n            message: 'Missing edgestore-ctx cookie',\n            code: 'UNAUTHORIZED'\n        });\n    }\n    const ctx = await getContext(ctxToken);\n    const bucket = router.buckets[bucketName];\n    if (!bucket) {\n        throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n            message: `Bucket ${bucketName} not found`,\n            code: 'BAD_REQUEST'\n        });\n    }\n    if (!bucket._def.beforeDelete) {\n        throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n            message: 'You need to define beforeDelete if you want to delete files directly from the frontend.',\n            code: 'SERVER_ERROR'\n        });\n    }\n    const fileInfo = await provider.getFile({\n        url: unproxyUrl(url)\n    });\n    const canDelete = await bucket._def.beforeDelete({\n        ctx,\n        fileInfo\n    });\n    if (!canDelete) {\n        throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n            message: 'Delete not allowed for the current context',\n            code: 'DELETE_NOT_ALLOWED'\n        });\n    }\n    const res = await provider.deleteFile({\n        bucket,\n        url: unproxyUrl(url)\n    });\n    log.debug('Finished [deleteFile]');\n    return res;\n}\nasync function encryptJWT(ctx) {\n    const secret = process.env.EDGE_STORE_JWT_SECRET ?? process.env.EDGE_STORE_SECRET_KEY;\n    if (!secret) {\n        throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n            message: 'EDGE_STORE_JWT_SECRET or EDGE_STORE_SECRET_KEY is not defined',\n            code: 'SERVER_ERROR'\n        });\n    }\n    const encryptionSecret = await getDerivedEncryptionKey(secret);\n    return await new jose__WEBPACK_IMPORTED_MODULE_2__.EncryptJWT(ctx).setProtectedHeader({\n        alg: 'dir',\n        enc: 'A256GCM'\n    }).setIssuedAt().setExpirationTime(Date.now() / 1000 + DEFAULT_MAX_AGE).setJti((0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])()).encrypt(encryptionSecret);\n}\nasync function decryptJWT(token) {\n    const secret = process.env.EDGE_STORE_JWT_SECRET ?? process.env.EDGE_STORE_SECRET_KEY;\n    if (!secret) {\n        throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n            message: 'EDGE_STORE_JWT_SECRET or EDGE_STORE_SECRET_KEY is not defined',\n            code: 'SERVER_ERROR'\n        });\n    }\n    const encryptionSecret = await getDerivedEncryptionKey(secret);\n    const { payload } = await (0,jose__WEBPACK_IMPORTED_MODULE_4__.jwtDecrypt)(token, encryptionSecret, {\n        clockTolerance: 15\n    });\n    return payload;\n}\nasync function getDerivedEncryptionKey(secret) {\n    return await (0,_panva_hkdf__WEBPACK_IMPORTED_MODULE_5__.hkdf)('sha256', secret, '', 'Edge Store Generated Encryption Key', 32);\n}\nfunction buildPath(params) {\n    const { bucket } = params;\n    const pathParams = bucket._def.path;\n    const path = pathParams.map((param)=>{\n        const paramEntries = Object.entries(param);\n        if (paramEntries[0] === undefined) {\n            throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n                message: `Empty path param found in: ${JSON.stringify(pathParams)}`,\n                code: 'SERVER_ERROR'\n            });\n        }\n        const [key, value] = paramEntries[0];\n        // this is a string like: \"ctx.xxx\" or \"input.yyy.zzz\"\n        const currParamVal = value().split('.').reduce((acc2, key)=>{\n            if (acc2[key] === undefined) {\n                throw new _edgestore_shared__WEBPACK_IMPORTED_MODULE_0__.EdgeStoreError({\n                    message: `Missing key ${key} in ${JSON.stringify(acc2)}`,\n                    code: 'BAD_REQUEST'\n                });\n            }\n            return acc2[key];\n        }, params.pathAttrs);\n        return {\n            key,\n            value: currParamVal\n        };\n    });\n    return path;\n}\nfunction parsePath(path) {\n    const parsedPath = path.reduce((acc, curr)=>{\n        acc[curr.key] = curr.value;\n        return acc;\n    }, {});\n    const pathOrder = path.map((p)=>p.key);\n    return {\n        parsedPath,\n        pathOrder\n    };\n}\nasync function getContext(token) {\n    return await decryptJWT(token);\n}\n/**\n * On local development, protected files are proxied to the server,\n * which changes the original URL.\n *\n * This function is used to get the original URL,\n * so that we can delete or confirm the upload.\n */ function unproxyUrl(url) {\n    if ( true && url.startsWith('http://')) {\n        // get the url param from the query string\n        const urlParam = new URL(url).searchParams.get('url');\n        if (urlParam) {\n            return urlParam;\n        }\n    }\n    return url;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/shared-039276af.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/utils-f6f56d38.mjs":
/*!****************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/utils-f6f56d38.mjs ***!
  \****************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   L: () => (/* binding */ Logger),\n/* harmony export */   m: () => (/* binding */ matchPath)\n/* harmony export */ });\n/* eslint-disable no-console */ function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nconst logLevel = [\n    'debug',\n    'info',\n    'warn',\n    'error',\n    'none'\n];\nclass Logger {\n    shouldLog(level) {\n        return logLevel.indexOf(level) >= logLevel.indexOf(this.logLevel);\n    }\n    debug(message, ...optionalParams) {\n        if (this.shouldLog('debug')) {\n            console.debug('[EdgeStoreDebug]', message, ...optionalParams);\n        }\n    }\n    info(message, ...optionalParams) {\n        if (this.shouldLog('info')) {\n            console.info('[EdgeStoreInfo]', message, ...optionalParams);\n        }\n    }\n    warn(message, ...optionalParams) {\n        if (this.shouldLog('warn')) {\n            console.warn('[EdgeStoreWarn]', message, ...optionalParams);\n        }\n    }\n    error(message, ...optionalParams) {\n        if (this.shouldLog('error')) {\n            console.error('[EdgeStoreError]', message, ...optionalParams);\n        }\n    }\n    constructor(logLevel){\n        _define_property(this, \"logLevel\", void 0);\n        this.logLevel = logLevel ?? ( false ? 0 : 'info');\n    }\n}\n\n/**\n * Check if a route matches the current path.\n */ function matchPath(pathname, route) {\n    // Allow trailing slash\n    // Allow query string\n    const regex = new RegExp(`${route}/?(\\\\?.*)?$`);\n    return regex.test(pathname);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGVkZ2VzdG9yZStzZXJ2ZXJAMC4yLjJfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfem9kQDMuMjMuOC9ub2RlX21vZHVsZXMvQGVkZ2VzdG9yZS9zZXJ2ZXIvZGlzdC91dGlscy1mNmY1NmQzOC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsTUFBcUMsR0FBRyxDQUFPO0FBQ3BGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxNQUFNO0FBQ3RDO0FBQ0E7O0FBRXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmxpbmstZS1jb21tZXJjZS8uL25vZGVfbW9kdWxlcy8ucG5wbS9AZWRnZXN0b3JlK3NlcnZlckAwLjIuMl9yZWFjdC1kb21AMTguMy4xX3JlYWN0QDE4LjMuMV96b2RAMy4yMy44L25vZGVfbW9kdWxlcy9AZWRnZXN0b3JlL3NlcnZlci9kaXN0L3V0aWxzLWY2ZjU2ZDM4Lm1qcz9hNjhjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi8gZnVuY3Rpb24gX2RlZmluZV9wcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgICBpZiAoa2V5IGluIG9iaikge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZVxuICAgICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBvYmpba2V5XSA9IHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gb2JqO1xufVxuY29uc3QgbG9nTGV2ZWwgPSBbXG4gICAgJ2RlYnVnJyxcbiAgICAnaW5mbycsXG4gICAgJ3dhcm4nLFxuICAgICdlcnJvcicsXG4gICAgJ25vbmUnXG5dO1xuY2xhc3MgTG9nZ2VyIHtcbiAgICBzaG91bGRMb2cobGV2ZWwpIHtcbiAgICAgICAgcmV0dXJuIGxvZ0xldmVsLmluZGV4T2YobGV2ZWwpID49IGxvZ0xldmVsLmluZGV4T2YodGhpcy5sb2dMZXZlbCk7XG4gICAgfVxuICAgIGRlYnVnKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICh0aGlzLnNob3VsZExvZygnZGVidWcnKSkge1xuICAgICAgICAgICAgY29uc29sZS5kZWJ1ZygnW0VkZ2VTdG9yZURlYnVnXScsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpbmZvKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICh0aGlzLnNob3VsZExvZygnaW5mbycpKSB7XG4gICAgICAgICAgICBjb25zb2xlLmluZm8oJ1tFZGdlU3RvcmVJbmZvXScsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB3YXJuKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKSB7XG4gICAgICAgIGlmICh0aGlzLnNob3VsZExvZygnd2FybicpKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ1tFZGdlU3RvcmVXYXJuXScsIG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlcnJvcihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcykge1xuICAgICAgICBpZiAodGhpcy5zaG91bGRMb2coJ2Vycm9yJykpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1tFZGdlU3RvcmVFcnJvcl0nLCBtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3RydWN0b3IobG9nTGV2ZWwpe1xuICAgICAgICBfZGVmaW5lX3Byb3BlcnR5KHRoaXMsIFwibG9nTGV2ZWxcIiwgdm9pZCAwKTtcbiAgICAgICAgdGhpcy5sb2dMZXZlbCA9IGxvZ0xldmVsID8/IChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nID8gJ2Vycm9yJyA6ICdpbmZvJyk7XG4gICAgfVxufVxuXG4vKipcbiAqIENoZWNrIGlmIGEgcm91dGUgbWF0Y2hlcyB0aGUgY3VycmVudCBwYXRoLlxuICovIGZ1bmN0aW9uIG1hdGNoUGF0aChwYXRobmFtZSwgcm91dGUpIHtcbiAgICAvLyBBbGxvdyB0cmFpbGluZyBzbGFzaFxuICAgIC8vIEFsbG93IHF1ZXJ5IHN0cmluZ1xuICAgIGNvbnN0IHJlZ2V4ID0gbmV3IFJlZ0V4cChgJHtyb3V0ZX0vPyhcXFxcPy4qKT8kYCk7XG4gICAgcmV0dXJuIHJlZ2V4LnRlc3QocGF0aG5hbWUpO1xufVxuXG5leHBvcnQgeyBMb2dnZXIgYXMgTCwgbWF0Y2hQYXRoIGFzIG0gfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@edgestore+server@0.2.2_react-dom@18.3.1_react@18.3.1_zod@3.23.8/node_modules/@edgestore/server/dist/utils-f6f56d38.mjs\n");

/***/ })

};
;